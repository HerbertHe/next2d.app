{
  "detail": "ビルド設定なしで、Next2Dアプリを作成する事ができます。",
  "dir-detail": "ディレクトリ構成",
  "chart-detail": "チャートフロー",
  "command": {
    "title": "コマンド",
    "text1": "開発サーバーを起動します。",
    "text2": "ルーティングJSONファイルから必要なViewクラスとViewModelクラスを生成します。",
    "text3": "指定した環境変数の本番アプリを書き出します。",
    "text4": "テストランナーを起動します。"
  },
  "stage": {
    "text1": "表示領域の幅を設定します。",
    "text2": "表示領域の高さ設定します。",
    "text3": "1秒間に何回描画するかを指定します。"
  },
  "config": {
    "detail": "環境毎に異なった変数値を設定できます。`all`で設定した値はすべての環境で利用可能です。",
    "text1": "Single Page Applicationとして、URLでシーンを制御することが可能です。",
    "text2": "画面遷移の準備が完了するまでの間、ローディング画面を表示するかどうかを設定する。コールバックとして設定されたクラスの開始関数と終了関数を呼び出す。",
    "text3": "gotoView関数が終了した後にコールバックするクラスを指定することができます。"
  },
  "routing": {
    "detail": "ルーティングに設定できるプロパティの上位は、英数字、スラッシュ、ハイフン、アンダースコアです。スラッシュ、ハイフン、アンダースコアをキーとして、CamelCaseでViewクラスにアクセスします。",
    "example": "以下のサンプルの場合、`https://example.com/quest/list`でアクセスを有効にし、`QuestListView.js`をコンテキストに設定します。",
    "detail2": "第2階層のプロパティ設定",
    "text1": "SPAモードでの直接アクセスを制御するために使用します。trueを設定して直接アクセスした場合、redirectで設定したViewが読み込まれます。",
    "text2": "privateがtrueの場合、ここで設定されたページが読み込まれます。設定されていない場合は、TopViewがロードされる。",
    "text3": "Viewにアクセスする前に、指定された場所にリクエストを送信します。受け取った情報は、nameをキーにnext2d.fw.responseに設定されます。",
    "detail3": "`requests`プロパティで設定可能なプロパティ。",
    "text4": "このプロパティには、以下の固定値が利用可能である。`json`, `content`, `image` および `custom` です。",
    "text5": "config.jsonから{{***}}で囲まれた文字列の値を取得 例）{{ api.endPoint }}path/to/apiの場合",
    "text6": "名前を設定すると、その名前をキーとして取得したデータがレスポンス・マップに設定されます。",
    "text7": "name に設定された値をキーとして、取得したデータをキャッシュする。",
    "text8": "リクエスト完了後にコールバックするクラスを指定することができます。指定されたクラスのコントラクターの第一引数に値が設定され、引き継がれます。",
    "text9": "リクエストを実行するクラスを指定することができます。(typeがcustomのときのみ呼び出されます。）",
    "text10": "リクエストを実行する関数へのアクセスを指定できるようにします。`public` または `static` を指定することができます。(type が custom の場合のみ起動される)",
    "text11": "リクエストを実行する関数を指定することができます。(typeがcustomのときのみ実行されます）"
  },
  "conf-detail": "JSON設定"
}
