{
  "title": "Player Pocket Reference",
  "description": "Next2D Playerの機能解説とサンプルコードを掲載しています",
  "chapter1": {
    "title": "DisplayListとDisplayObjectとDisplayObjectContainerの関係性",
    "text1": "DisplayListは大きく3つの要素から構成されています。Stage、DisplayObjectContainer、DisplayObjectの3つの主要な要素で構成されています。",
    "text2": "Stageは全てのDisplayObjectを保持する親オブジェクトです。",
    "text3": "DisplayObjectContainerはDisplayObjectを配置することができるDisplayObjectです。DisplayObjectContainerを継承するクラスは以下の4つです。",
    "text4": "DisplayObjectは描画処理を実行するオブジェクトです。DisplayObjectを継承するクラスは以下の9つです。",
    "text5": "DisplayObjectContainerにDisplayObjectを追加するには、DisplayObjectContainerのaddChildメソッドを使います。"
  },
  "chapter2": {
    "title": "DisplayObjectContainerにDisplayObjectを追加・削除する",
    "text1": "indexは0から始まる連番の整数で、0が最も後ろ、それ以上の値が最も前になります。インデックスは負の値や、現在の最高値のインデックスに1を足した値より大きい数値にはできません。",
    "text2": "addChildメソッドは、DisplayObjectContainerの最前面にDisplayObjectを追加するメソッドです。",
    "text3": "addChildAtメソッドは、DisplayObjectContainer内の指定されたインデックス位置にDisplayObjectを追加します。",
    "text4": "removeChildおよびremoveChildAtメソッドは、DisplayObjectContainerから指定されたDisplayObjectを削除するメソッドです。削除されたインデックスの後にDisplayObjectがある場合、それらはより小さいインデックス位置に再配置されます。"
  },
  "chapter3": {
    "title": "DisplayObjectContainerにDisplayObjectを追加・削除した時のイベント",
    "text1": "addedイベントは、DisplayObjectContainerのaddChildまたはaddChildAt関数でDisplayObjectが追加されたときに送られるEventオブジェクトです。",
    "text2": "addedToStageイベントは、同様のイベントですが、DisplayObjectContainerがDisplayListに追加され、画面に表示されたときに送出されるEventオブジェクトとなります。",
    "text3": "removed イベントは、DisplayObjectContainerのremoveChild もしくはremoveChildAt関数を用いて DisplayObjectContainerからDisplayObjectが削除される際に送られるイベントオブジェクトです。また、addChildとaddChildAt関数を使用して、DisplayObjectContainer が既存の位置から指定された位置に移動された場合にも送られます。",
    "text4": "removedFromStageイベントは、同様のイベントですが、DisplayObjectContainerがDisplayListから削除され、画面から消えたときに送出されるEventオブジェクトです。"
  },
  "chapter4": {
    "title": "コンテナ内のDisplayObjectの重なり順を調べる・変更する",
    "text1": "getChildIndexメソッドは、引数で指定されたDisplayObjectの重なり順のインデックスを返すメソッドです。",
    "text2": "setChildIndex関数は、第一引数で指定されたDisplayObjectを第二引数の位置に配置し直します。この再配置は、addChildAtメソッドでも同様に行うことができます。",
    "text3": "swapChildren関数は、引数で指定された2つの DisplayObjectの重なり順（インデックス位置）を入れ替えるものです。",
    "text4": "swapChildrenAt関数は、引数indexで指定された二つの DisplayObjectの重なり順（インデックス位置）を入れ替えます。 addChildメソッドは、DisplayObjectを最上位に再配置するために使用します。"
  },
  "chapter5": {
    "title": "DisplayObjectの数や、コンテナ内のDisplayObjectかの判定を行う",
    "text1": "numChildrenは、子要素に含まれるDisplayObjectの個数を表します。孫要素は数に含まれません。",
    "text2": "containsは、引数で指定されたDisplayObjectが DisplayObjectContainerの子要素であるかどうかを確認する関数です。戻り値はブール値で、DisplayObjectが子オブジェクトまたはDisplayObjectContainer自体の場合はtrue、そうでない場合はfalseです。"
  },
  "chapter6": {
    "title": "コンテナ内のDisplayObjectをインデックス・インスタンス名を指定して参照する",
    "text1": "getChildAt関数は、重ね順のインデックスから子要素オブジェクトへの参照を取得します。",
    "text2": "getChildByName関数は、インスタンス名から子要素オブジェクトへの参照を取得します。"
  },
  "chapter7": {
    "title": "親DisplayObjectContainer、ルートDisplayObjectContainerへの参照",
    "text1": "parentプロパティは、親であるDisplayObjectContainerを指します。複数のparentを使用して、先祖にさかのぼることができます。但し、DisplayObjectContainerの子要素に登録がない場合はnullを返します。",
    "text2": "rootプロパティは、最も高い階層の親DisplayObjectContainerを指します。殆どの場合はStage直下のDisplayObjectContainerを指す事が多です。但し、DisplayObjectContainerの子要素に登録がない場合はnullを返します。"
  },
  "chapter8": {
    "title": "DisplayObject名を設定・変更する。",
    "text1": "DisplayObject名を表すプロパティです。参照と代入の両方が可能です。名前には英数字とアンダースコア(_)の利用を推奨してます。名前をつけたDisplayObjectにはthis.{{ DisplayObject名 }}でアクセスが可能になります。"
  },
  "chapter9": {
    "title": "DisplayObjectの位置を移動する",
    "text1": "親DisplayObjectContainerのローカル座標を基準にしたDisplayObjectのx座標、y座標を表します。xyプロパティーに値(Number)を代入する事で移動する事が可能です。"
  },
  "chapter10": {
    "title": "DisplayObjectの幅/高さ/拡大値・縮小値を調べる・設定する",
    "text1": "DisplayObjectContainerの水平方向の幅、垂直方向の高さをピクセル単位で表します。親DisplayObjectContainerを基準とした幅・高さであるため子のDisplayObjectが回転すると幅と高さの値は変化します。width/heightプロパティーに値を代入すると拡大/縮小が行えます。widthはscaleX、heightはscaleYと連動しています。",
    "text2": "DisplayObject の幅（scaleX）、高さ（scaleY）の拡大縮小率を表します。0.0～1.0は0～100%の範囲を示し、DisplayObjectを拡大縮小する場合は、このプロパティに数値を代入します。負の値を代入するとDisplayObjectを左右または上下が反転します。"
  },
  "chapter11": {
    "title": "DisplayObjectを回転させる",
    "text1": "DisplayObjectの回転角度を指定します。単位は度(°)です。負の値や360°を超える値も指定できますが、内部的には0～360°の範囲で置き換えられます。"
  },
  "chapter12": {
    "title": "DisplayObjectを完全な非表示にする",
    "text1": "DisplayObjectの表示・非表示を設定するプロパティです。データ型はBooleanで、デフォルトはtrueです。falseを代入すると、DisplayObjectは非表示になります。非表示にしたオブジェクトは、マウスやタップなどのユーザーイベントを取得することができません。"
  },
  "chapter13": {
    "title": "DisplayObjectの透明度を参照・変更する",
    "text1": "DisplayObjectの透明度を表すプロパティです。データ型はNumberで、有効な値は0.0から1.0です。"
  },
  "chapter14": {
    "title": "DisplayObjectにマスクを適用する",
    "text1": "DisplayObjectのマスクとなるDisplayObjectを設定します。初期値はnullで、マスクを設定する時は、DisplayObjectを代入します。マスクを解除するには、nullを代入します。"
  },
  "chapter15": {
    "title": "DisplayObjectのblendModeを参照・変更する",
    "text1": "DisplayObjectのBlendModeを設定します。設定されたBlendModeに従って、DisplayObjectと背景色（RGB）を比較します。対応するピクセル毎に加算・減算し、その結果を基に描画を行います。",
    "text2": "定数と概要",
    "text3": "DisplayObjectは、背景の前に表示されます。",
    "text4": "DisplayObjectの要素カラーの値を背景色に加算し、その際に上限0xFFを適用します。",
    "text5": "DisplayObjectの各ピクセルのアルファ値を背景に適用します。",
    "text6": "DisplayObjectの要素カラーと背景色のうち暗い方（値が小さい方）の色を選択します。",
    "text7": "DisplayObjectの要素カラーと背景色を比較し、2つの要素カラーのうち明るい方の値から暗い方の値を差し引きます。",
    "text8": "DisplayObjectのアルファ値に基づいて背景を消去します。",
    "text9": "DisplayObjectの暗さに基づいて、各ピクセルの色を調整します。",
    "text10": "背景を反転します。",
    "text11": "DisplayObjectに関する透明度グループを強制的に作成します。",
    "text12": "DisplayObjectの要素カラーと背景色のうち明るい方（値が大きい方）の色を選択します。",
    "text13": "DisplayObjectの要素カラーの値と背景色の要素カラーの値を乗算した後、0xFFで割って正規化し、色を暗くします。",
    "text14": "DisplayObjectの暗さに基づいて、各ピクセルの色を調整します。",
    "text15": "DisplayObjectの色の補数（逆）と背景色の補数を乗算して、ブリーチ効果を得ます。",
    "text16": "結果の下限を0として、表示オブジェクトの要素カラーの値をその背景色の値から減算します。"
  },
  "chapter16": {
    "title": "9スライスの拡大・縮小のグリッド設定",
    "text1": "scale9Gridは、9スライスの拡大・縮小のためのグリッドを設定するプロパティです。デフォルト値はnullで、設定時はRectangleオブジェクトを代入します。",
    "text2": "9スライスの拡大/縮小方向",
    "text3": "上下左右と中央のエリア",
    "text4": "通常どおり拡大/縮小",
    "text5": "上下左右四隅の領域",
    "text6": "拡大・縮小せずに固定",
    "text7": "上下の左右中央の領域",
    "text8": "左右方向にのみの拡大・縮小",
    "text9": "左右の上下中央の領域",
    "text10": "上下方向にのみ拡大/縮小"
  },
  "chapter17": {
    "title": "表示オブジェクトの境界ボックス",
    "text1": "第一引数のオブジェクトの座標系を基準にして、表示オブジェクトの領域を定義する矩形を返します。"
  },









  "chapter0": {
    "title": "",
    "text1": "",
    "text2": "",
    "text3": "",
    "text4": ""
  },







  "drop-shadow": {
    "title": "ドロップシャドウ効果を適用する",
    "text1": "DropShadowFilterは、ドロップシャドウ効果の情報を格納するクラスです。オブジェクトは、コンストラクタの引数で各プロパティの値を指定して生成するか、引数なしのデフォルトで生成し、変更が必要なプロパティのみを再割り当てすることも可能です。",
    "text2": "影のオフセット距離をピクセル単位で指定します",
    "text3": "影の角度",
    "text4": "シャドウカラー",
    "text5": "色のアルファ透過値",
    "text6": "水平方向のぼかしの量",
    "text7": "垂直方向のぼかしの量",
    "text8": "シャドウの強度",
    "text9": "ブラーの実行回数",
    "text10": "グローがインナーグローであるかどうかを指定します",
    "text11": "オブジェクトにノックアウト効果があるかどうかを指定します",
    "text12": "オブジェクトが非表示かどうかを示します"
  },
  "blur": {
    "title": "ブラー効果を適用する",
    "text1": "BlurFilterは、ぼかし効果の情報を格納するクラスです。オブジェクトは、コンストラクタの引数で各プロパティの値を指定して生成するか、引数なしのデフォルトで生成し、変更が必要なプロパティのみを再割り当てすることも可能です。",
    "text2": "水平方向のぼかしの量",
    "text3": "垂直方向のぼかしの量",
    "text4": "ブラーの実行回数"
  },
  "glow": {
    "title": "グロー効果を適用する",
    "text1": "GlowFilterは、グロー効果の情報を格納するクラスです。オブジェクトは、コンストラクタの引数で各プロパティの値を指定して生成するか、引数なしのデフォルトで生成し、変更が必要なプロパティのみを再割り当てすることも可能です。",
    "text2": "グローカラー",
    "text3": "色のアルファ透過値",
    "text4": "水平方向のぼかしの量",
    "text5": "垂直方向のぼかしの量",
    "text6": "シャドウの強度",
    "text7": "ブラーの実行回数",
    "text8": "グローがインナーグローであるかどうかを指定します",
    "text9": "オブジェクトにノックアウト効果があるかどうかを指定します"
  },
  "bevel": {
    "title": "ベベル効果を適用する",
    "text1": "BevelFilterは、ベベル効果の情報を格納するクラスです。オブジェクトは、コンストラクタの引数で各プロパティの値を指定して生成するか、引数なしのデフォルトで生成し、変更が必要なプロパティのみを再割り当てすることも可能です。",
    "text2": "影のオフセット距離をピクセル単位で指定します",
    "text3": "影の角度",
    "text4": "ベベルのハイライトカラー",
    "text5": "ハイライトカラーのアルファ透明度",
    "text6": "ベベルのシャドウカラー",
    "text7": "シャドウカラーのアルファ透明度",
    "text8": "水平方向のぼかしの量",
    "text9": "垂直方向のぼかしの量",
    "text10": "シャドウの強度",
    "text11": "ブラーの実行回数",
    "text12": "ベベルの配置",
    "text13": "オブジェクトにノックアウト効果があるかどうかを指定します"
  },
  "color-matrix": {
    "title": "カラーマトリックス効果を適用する",
    "text1": "入力イメージの各ピクセルのRGBAカラー値とアルファ値に4 × 5マトリックス変換を適用することで、新しいRGBAカラー値とアルファ値から成る結果を作成できます。これにより、彩度変更、色相回転、輝度アルファ変換など、さまざまな効果を利用できます。",
    "text2": "4 × 5カラー変換用の配列"
  },
  "convolution": {
    "title": "畳み込み効果を適用する",
    "text1": "マトリックス畳み込みフィルター効果を適用できます。畳み込みでは、入力イメージ内のピクセルを、隣接するピクセルと組み合わせて、イメージを作成します。畳み込みを使用すると、ぼかし、エッジ検出、シャープ、エンボス、ベベルなど、幅広いイメージ効果を実現できます。",
    "text2": "マトリックスのx次元",
    "text3": "マトリックスのy次元",
    "text4": "マトリックス変換に使用する値の配列",
    "text5": "マトリックス変換中に使用する除数",
    "text6": "マトリックス変換の結果に加算するバイアス量",
    "text7": "アルファチャンネルがフィルター効果なしで維持されるかどうか、またはカラーチャンネルだけではなくアルファチャンネルにも畳み込みフィルターが適用されるか",
    "text8": "イメージをクランプする必要があるかどうか",
    "text9": "ソースイメージの外にあるピクセルを置換するカラー",
    "text10": "カラーのアルファ透明度の値"
  },
  "displacement-map": {
    "title": "変位マップ効果を適用する",
    "text1": "DisplacementMapFilterクラスは、指定されたBitmapDataオブジェクト（置き換えマップイメージと言います）のピクセル値を使用して、オブジェクトの置き換え（変位）を実行します。このフィルターを使用して、MovieClip、TextField、VideoオブジェクトなどのDisplayObjectクラスから継承したオブジェクトにワープ効果や斑点効果を適用できます。",
    "text2": "置き換えマップデータが含まれるBitmapDataオブジェクト",
    "text3": "マップイメージの左上隅を基準としたターゲット表示オブジェクトの左上隅のオフセットが含まれる値",
    "text4": "xの結果を変位させる場合にどのカラーチャンネルをマップイメージで使用するかを指定",
    "text5": "yの結果を変位させる場合にどのカラーチャンネルをマップイメージで使用するかを指定",
    "text6": "マップ計算のx置き換え結果を拡大/縮小する場合に使用する乗数の値",
    "text7": "マップ計算のy置き換え結果を拡大/縮小する場合に使用する乗数の値",
    "text8": "フィルターのモード",
    "text9": "範囲外置き換えの場合に使用する色の指定",
    "text10": "範囲外置き換えの場合に使用するアルファ透明度値"
  },
  "gradient-bevel": {
    "title": "グラデーションベベル効果を適用する",
    "text1": "GradientBevelFilterクラスを使用すると、オブジェクトにグラデーションベベル効果を適用し、表示できます。グラデーションベベルは、オブジェクトの外側、内側、または上側が斜めになったエッジであり、グラデーションカラーで強調されます。斜めのエッジによってオブジェクトが3次元に見えます。",
    "text2": "影のオフセット距離をピクセル単位で指定します",
    "text3": "影の角度",
    "text4": "グラデーションで使用するカラー値の配列",
    "text5": "カラー配列内の各色に対応するアルファ透明度の値",
    "text6": "カラー配列内の対応するカラーの色分布比率の配列",
    "text7": "水平方向のぼかしの量",
    "text8": "垂直方向のぼかしの量",
    "text9": "シャドウの強度",
    "text10": "ブラーの実行回数",
    "text11": "フィルター効果",
    "text12": "オブジェクトにノックアウト効果があるかどうかを指定します"
  },
  "gradient-glow": {
    "title": "グラデーショングロー効果を適用する",
    "text1": "GradientGlowFilterクラスを使用すると、表示オブジェクトにグラデーショングロー効果を適用できます。グラデーショングローとは、制御可能なカラーグラデーションによるリアルな輝きです。グラデーショングローは、オブジェクトの内側エッジや外側エッジの周囲、またはオブジェクトの上に適用できます。",
    "text2": "影のオフセット距離をピクセル単位で指定します",
    "text3": "影の角度",
    "text4": "グラデーションで使用するカラー値の配列",
    "text5": "カラー配列内の各色に対応するアルファ透明度の値",
    "text6": "カラー配列内の対応するカラーの色分布比率の配列",
    "text7": "水平方向のぼかしの量",
    "text8": "垂直方向のぼかしの量",
    "text9": "シャドウの強度",
    "text10": "ブラーの実行回数",
    "text11": "フィルター効果",
    "text12": "オブジェクトにノックアウト効果があるかどうかを指定します"
  }
}